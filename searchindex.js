Search.setIndex({"docnames": ["bigtree/binarytree/construct", "bigtree/dag/construct", "bigtree/dag/export", "bigtree/node/basenode", "bigtree/node/binarynode", "bigtree/node/dagnode", "bigtree/node/node", "bigtree/tree/construct", "bigtree/tree/export", "bigtree/tree/helper", "bigtree/tree/modify", "bigtree/tree/search", "bigtree/utils/iterators", "bigtree/utils/plot", "bigtree/workflows/app_calendar", "bigtree/workflows/app_todo", "binarytree", "dag", "demo/binarytree", "demo/dag", "demo/tree", "demo/workflow", "index", "node", "others", "others/changelog", "others/contributing", "others/list_dir", "others/merging_trees", "others/nodes", "others/tips", "others/weighted_trees", "tree", "utils", "workflows"], "filenames": ["bigtree/binarytree/construct.rst", "bigtree/dag/construct.rst", "bigtree/dag/export.rst", "bigtree/node/basenode.rst", "bigtree/node/binarynode.rst", "bigtree/node/dagnode.rst", "bigtree/node/node.rst", "bigtree/tree/construct.rst", "bigtree/tree/export.rst", "bigtree/tree/helper.rst", "bigtree/tree/modify.rst", "bigtree/tree/search.rst", "bigtree/utils/iterators.rst", "bigtree/utils/plot.rst", "bigtree/workflows/app_calendar.rst", "bigtree/workflows/app_todo.rst", "binarytree.rst", "dag.rst", "demo/binarytree.md", "demo/dag.md", "demo/tree.md", "demo/workflow.md", "index.rst", "node.rst", "others.rst", "others/changelog.rst", "others/contributing.rst", "others/list_dir.md", "others/merging_trees.md", "others/nodes.md", "others/tips.rst", "others/weighted_trees.md", "tree.rst", "utils.rst", "workflows.rst"], "titles": ["\u2728 Construct", "\u2728 Construct", "\ud83d\udd28 Export", "\ud83c\udf31 BaseNode", "\ud83c\udf38 BinaryNode", "\ud83c\udf3c DAGNode", "\ud83c\udf3a Node", "\u2728 Construct", "\ud83d\udd28 Export", "\ud83d\udd27 Helper", "\ud83d\udcdd Modify", "\ud83d\udd0d Search", "\u27b0 Iterators", "\ud83d\udcca Plot", "\ud83d\udcc6 Calendar App", "\u2714\ufe0f To Do App", "\ud83c\udf35 Binary Tree", "\ud83c\udf34 Directed Acyclic Graph (DAG)", "\ud83d\udccb Binary Tree Demonstration", "\ud83d\udccb DAG Demonstration", "\ud83d\udccb Tree Demonstration", "\ud83d\udccb Workflow Demonstration", "\ud83c\udf33 Documentation", "\ud83c\udf3f Node", "\ud83c\udf10 Others", "\ud83c\udf42 Changelog", "\ud83c\udf6a Contributing", "List Directory", "Merging Trees", "Extending Nodes", "\ud83d\udca1 Tips and Tricks", "Trees with Weighted Edges", "\ud83c\udf32 Tree", "\ud83d\udd27 Utils", "\ud83d\udc77 Workflows"], "terms": {"from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 25, 26, 27, 28, 29, 30, 31], "list": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 21, 22, 24, 25, 26, 29], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30], "heapq": [0, 18], "structur": [0, 9, 12, 13, 19, 20, 22, 25, 28, 30], "add": [0, 1, 3, 13, 14, 15, 20, 21, 22, 24, 25, 26, 31], "node": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 22, 24, 25, 28, 31], "attribut": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 22, 25, 30, 31], "list_to_binarytre": [0, 12, 16, 18, 25], "No": [0, 1, 2, 7, 8, 10], "function": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 24, 25], "bigtre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31], "binarytre": [0, 18], "heapq_list": 0, "type": [0, 1, 7, 8, 9, 10, 22, 25, 26, 29, 30], "int": [0, 3, 4, 8, 9, 11, 12, 25, 29, 30], "node_typ": [0, 1, 7, 9], "binarynod": [0, 9, 12, 22, 23, 25], "class": [0, 1, 3, 4, 5, 6, 7, 8, 14, 15, 19, 20, 22, 25, 29, 30, 31], "number": [0, 7, 8, 11, 25], "float": [0, 8, 13], "format": [0, 8, 14, 18, 25, 26], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31], "tree_to_dot": [0, 8, 18, 20, 25, 30, 31, 32], "nums_list": [0, 18], "1": [0, 1, 2, 3, 4, 7, 8, 11, 12, 13, 14, 15, 21, 29, 30, 31], "2": [0, 1, 2, 4, 8, 9, 10, 12, 13, 29, 30, 31], "3": [0, 1, 2, 4, 8, 12, 13, 18, 22, 26, 27, 30, 31], "4": [0, 2, 4, 8, 11, 12, 13, 18, 22], "5": [0, 2, 7, 8, 11, 12, 13, 18], "6": [0, 2, 7, 12, 18], "7": [0, 12, 18], "8": [0, 12, 18], "9": [0, 22], "10": [0, 7, 8, 26], "root": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 22, 25, 27, 29, 30, 31], "show": [0, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 21, 25, 28, 30], "graph": [0, 1, 2, 8, 12, 13, 18, 19, 20, 22, 25, 30, 31], "node_colour": [0, 2, 8, 18, 19, 20, 30, 31], "gold": [0, 2, 8, 18, 19, 20, 30, 31], "write_png": [0, 2, 8, 18, 19, 20, 30, 31], "asset": [0, 2, 8, 15, 18, 19, 20, 25, 30, 31], "construct_binarytre": 0, "png": [0, 2, 8, 18, 19, 22, 25, 30, 31], "paramet": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 25], "contain": [0, 1, 2, 7, 9, 19, 20, 22, 25], "integ": 0, "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 25, 29, 30, 31], "order": [0, 12, 18, 22, 25], "fashion": 0, "creat": [0, 1, 3, 4, 5, 6, 7, 9, 10, 15, 20, 25, 26, 30, 31], "default": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 19, 20, 21, 25], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 20, 25, 29, 30, 31], "direct": [1, 2, 8, 12, 22, 25], "acycl": [1, 2, 12, 22], "dictionari": [1, 2, 3, 4, 5, 6, 7, 8, 22, 25, 26, 30, 31], "panda": [1, 2, 3, 4, 6, 7, 8, 21, 22, 25, 26], "datafram": [1, 2, 3, 4, 6, 7, 8, 14, 21, 22, 25, 26], "parent": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 22, 25, 28, 29, 30, 31], "child": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 19, 20, 22, 25, 29, 30, 31], "relat": [1, 7, 22, 26], "list_to_dag": [1, 17, 19], "dict_to_dag": [1, 17, 19], "ye": [1, 2, 7, 8, 10], "dataframe_to_dag": [1, 17, 19], "These": [1, 3, 4, 5, 6, 7], "ar": [1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 18, 19, 20, 21, 22, 25, 26, 28, 30], "standalon": [1, 7], "under": [1, 7, 8], "hood": [1, 7], "thei": [1, 3, 4, 5, 6, 7, 8, 10, 20], "have": [1, 2, 3, 4, 5, 6, 7, 8, 12, 19, 20, 25, 28, 29, 30, 31], "follow": [1, 7, 13, 19, 20, 22, 26], "depend": [1, 7, 22, 25], "data": [1, 7, 8, 12, 20], "core": [1, 2, 7, 8], "frame": [1, 7], "child_col": [1, 7], "str": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 22, 25, 29, 30], "parent_col": [1, 2, 7, 8, 20], "attribute_col": [1, 7], "dagnod": [1, 2, 11, 12, 22, 23, 25], "note": [1, 2, 7, 10, 12, 19, 20, 25], "must": [1, 2, 3, 4, 5, 9, 10, 11, 12], "uniqu": [1, 2, 9, 10, 12], "specifi": [1, 3, 5, 7, 8, 14], "column": [1, 2, 7, 8, 19, 20, 22, 25], "If": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 20, 22, 26, 28, 30], "take": [1, 6, 7, 8, 11, 12, 25, 26], "first": [1, 7, 12, 15, 21, 25, 26], "second": [1, 7], "all": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 22, 25, 26, 27, 30], "other": [1, 3, 4, 5, 6, 7, 8, 9, 10, 18, 19, 20, 28, 30], "pd": [1, 2, 7, 8, 14, 19, 20, 25], "dag_iter": [1, 12, 19, 33], "relation_data": [1, 7], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 25], "b": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 26, 28, 29, 30, 31], "c": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 22, 29, 30, 31], "d": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 30, 31], "e": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 25, 26], "step": [1, 2, 8, 12, 19], "node_nam": [1, 2, 5, 6, 8, 11, 12, 19, 20], "path": [1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 19, 20, 21, 22, 25, 27, 29, 30], "inform": [1, 3, 5, 7, 8, 19, 20, 26], "set": [1, 2, 3, 5, 6, 7, 8, 10, 19, 20, 24, 25, 28, 30], "except": [1, 5, 7, 10, 11, 25], "relation_attr": 1, "dict": [1, 2, 3, 5, 7, 8, 19, 20], "ani": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 25, 26], "parent_kei": [1, 2, 8, 19, 20], "nest": [1, 2, 7, 8, 12, 22, 25], "kei": [1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 22], "valu": [1, 2, 3, 5, 7, 8, 9, 10, 11, 19, 20, 22, 25], "relation_dict": [1, 19], "retriev": [1, 2, 8, 13, 22, 25], "tupl": [1, 2, 3, 4, 5, 7, 8, 11, 12, 19, 20, 22, 25], "relations_list": [1, 7, 19], "extract": [2, 8, 27, 30], "dag_to_list": [2, 17], "dag_to_dict": [2, 17], "attr_dict": [2, 8, 20], "all_attr": [2, 7, 8, 20], "dag_to_datafram": [2, 17], "dot": [2, 8, 22, 25], "svg": [2, 8, 22, 25], "jpeg": [2, 8, 22, 25], "etc": [2, 7, 8], "dag_to_dot": [2, 17, 19, 25], "t": [2, 3, 4, 5, 8, 11, 12, 13], "name_col": [2, 7, 8, 20], "bool": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12], "fals": [2, 7, 8, 9, 10, 19, 20, 25, 29, 30], "0": [2, 7, 8, 9, 11, 12, 13, 14, 19, 20, 21, 29, 30, 31], "map": [2, 8, 25], "correspond": [2, 8], "option": [2, 3, 4, 7, 8, 12, 15, 22, 25], "indic": [2, 3, 4, 5, 7, 8, 9, 10, 25], "whether": [2, 8, 10, 25], "rankdir": [2, 8], "tb": [2, 8, 20], "bg_colour": [2, 8, 25], "node_shap": [2, 8, 25], "edge_colour": [2, 8], "node_attr": [2, 7, 8], "edge_attr": [2, 8, 25, 30, 31], "pydot": [2, 8, 30, 31], "imag": [2, 8, 13, 22, 25], "possibl": [2, 3, 4, 5, 8, 20, 25], "includ": [2, 3, 4, 5, 8, 18, 25], "style": [2, 8, 20, 25], "fillcolor": [2, 8], "shape": [2, 8, 25], "dag_graph": 2, "displai": [2, 8, 21, 22], "directli": [2, 3, 4, 5, 6, 8, 10, 19, 20], "without": [2, 5, 6, 8, 10, 11, 20], "save": [2, 8, 15, 20, 21, 22], "requir": [2, 8, 20, 22, 25, 26], "ipython": [2, 8], "plt": [2, 8], "create_png": [2, 8], "object": [2, 3, 5, 8, 14, 15], "file": [2, 8, 10, 20, 21, 22, 25, 26], "docstr": [2, 8, 15, 25, 26], "tree_dag": 2, "write_dot": [2, 8], "string": [2, 7, 8, 9, 10, 22, 25], "to_str": [2, 8], "strict": [2, 8], "digraph": [2, 8], "g": [2, 3, 7, 8, 12, 13, 18, 19, 20], "nrankdir": [2, 8], "nc": 2, "label": [2, 8, 30, 31], "na": [2, 7], "nd": 2, "nb": 2, "ne": 2, "n": [2, 7, 8, 26], "union": [2, 8, 9, 12, 14], "layout": [2, 8], "can": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31], "bt": [2, 8], "lr": [2, 8], "rl": [2, 8], "background": [2, 8], "color": [2, 8], "fill": [2, 7, 8], "colour": [2, 8], "circl": [2, 8], "squar": [2, 7, 8, 25], "diamond": [2, 8], "triangl": [2, 8], "edg": [2, 8, 24, 25], "overrid": [2, 8, 10, 28, 30], "bold": [2, 8], "black": [2, 8, 26], "children": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 19, 20, 22, 25, 28, 29, 30], "kwarg": [3, 4, 5, 6, 8, 14, 15, 29, 30, 31], "base": [3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 20, 22, 25], "extend": [3, 4, 5, 6, 18, 20, 22, 24, 25], "python": [3, 4, 5, 6, 25, 26, 27, 30], "tree": [3, 4, 5, 6, 9, 12, 13, 14, 15, 19, 21, 24, 25, 26, 27], "initi": [3, 4, 5, 6, 8, 14, 15, 20], "link": [3, 4, 5, 6, 18, 19, 20, 22, 25], "each": [3, 4, 5, 6, 18, 19, 20, 30, 31], "setter": [3, 4, 5, 6, 18, 19, 20, 25], "method": [3, 4, 5, 6, 13, 14, 15, 18, 19, 20, 22, 24, 25], "bitshift": [3, 5, 18, 19, 20], "oper": [3, 5, 18, 25], "convent": [3, 5, 7, 18, 19, 20, 24], "parent_nod": [3, 5, 18, 19], "child_nod": [3, 5, 18, 19], "print_tre": [3, 4, 6, 8, 20, 25, 27, 29, 30, 32], "ag": [3, 5, 6, 7, 8, 11, 20], "90": [3, 5, 6, 7, 8, 11, 20], "65": [3, 7, 8, 11, 20, 25], "60": [3, 7, 8, 11, 20], "40": [3, 7, 8, 11, 20], "attr_list": [3, 7, 8, 9, 13, 20, 25, 29, 30], "pass": [3, 4, 5, 6, 19, 20, 26], "argument": [3, 4, 5, 6, 8, 11, 12, 19, 20, 25], "creation": [3, 4, 5, 6, 25], "instanti": [3, 4, 5, 6], "i": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 25, 26, 28, 30], "store": [3, 4, 5, 6, 7], "from_dict": [3, 4, 5, 6], "getter": [3, 4, 5, 6, 25], "get": [3, 4, 5, 6, 9, 19, 22, 25, 27, 30], "ancestor": [3, 5, 19, 20], "exclud": [3, 5], "self": [3, 4, 5, 6, 8, 15, 19, 20, 29, 30, 31], "iter": [3, 5, 7, 8, 11, 25, 33], "descend": [3, 5, 8, 9, 10, 19, 20, 25], "leav": [3, 8, 10, 20], "leaf": [3, 4, 5, 7, 8, 10, 19, 20, 25], "": [3, 5, 7, 8, 9, 10, 11, 12, 13, 19, 20], "sibl": [3, 5, 9, 13, 19, 20], "left_sibl": [3, 20], "left": [3, 4, 7, 8, 12, 13, 18, 20, 25], "right_sibl": [3, 20], "right": [3, 4, 8, 12, 13, 18, 20, 25], "configur": [3, 4, 5, 6, 25], "node_path": [3, 20], "is_root": [3, 5, 19, 20, 29, 30], "is_leaf": [3, 4, 5, 8, 19, 20, 29, 30], "depth": [3, 8, 9, 11, 12, 13, 20, 25], "max_depth": [3, 8, 9, 11, 12, 20, 25, 27, 30], "maximum": [3, 8, 9, 11, 12, 18], "avail": [3, 5, 6, 8, 19, 20, 22], "perform": [3, 5, 6, 11, 25, 26], "constructor": [3, 5, 22, 25], "describ": [3, 5, 8, 19, 20], "sort": [3, 4, 5, 12, 20, 25], "get_attr": [3, 5, 19, 20, 25], "attr_nam": [3, 5, 11], "set_attr": [3, 5, 19, 20], "attr": [3, 5, 25], "go_to": [3, 5, 19, 20, 25], "own": [3, 5, 8], "anoth": [3, 5, 7, 8, 9, 10, 13, 19, 22, 25], "same": [3, 5, 6, 7, 8, 9, 10, 12, 13, 22, 25], "append": [3, 20, 25, 27, 30], "multipl": [3, 5, 7, 9, 10, 11, 19, 20, 22, 25], "copi": [3, 5, 9, 19, 20, 22, 25], "deep": [3, 5], "properti": [3, 4, 5, 6, 8, 19, 20, 24, 31], "yield": [3, 5, 8], "doe": [3, 5, 20], "ad": [3, 7, 8, 9, 14, 15, 20, 29, 30], "clone": [3, 5, 9, 22, 25, 26], "a_copi": [3, 5], "index": 3, "start": [3, 5, 7, 8, 11, 20, 25], "exclude_attribut": [3, 5], "exclude_prefix": [3, 5, 19, 20], "_basenode__children": 3, "_basenode__par": 3, "_sep": 3, "_": [3, 8, 19, 20], "prefix": [3, 5, 7, 8, 25], "classmethod": [3, 5], "input_dict": [3, 5], "construct": [3, 5, 16, 17, 22, 25, 27, 28, 30, 31, 32], "input": [3, 5, 7, 8, 10, 12], "default_valu": [3, 5], "exist": [3, 5, 7, 9, 10, 20, 21, 22, 25, 28, 30], "current": [3, 5, 12], "f": [3, 7, 8, 12, 13, 18, 19, 20, 27, 30], "h": [3, 7, 12, 13, 14, 18, 19, 20], "travel": [3, 5, 25], "inclus": [3, 5], "end": [3, 5, 7, 8], "do": [3, 5, 9, 10, 11, 25, 26, 34], "allow": [3, 5, 7, 18, 25], "access": [3, 5, 6, 19, 20, 25], "keyword": [3, 4, 6, 8], "lambda": [3, 4, 11, 12, 20], "revers": [3, 4, 20], "true": [3, 4, 7, 8, 9, 10, 11, 12, 19, 20, 25, 27, 28, 29, 30], "an": [4, 6, 8, 13, 21, 25, 26], "extens": [4, 6], "abl": [4, 6, 8, 10, 19, 25], "binari": [4, 12, 22, 25], "implement": [4, 5, 14, 15, 21, 22, 25, 26], "length": [4, 7, 8, 25], "denot": 4, "val": [4, 25], "dag": [5, 12, 22, 25], "In": [5, 7, 8, 10, 12, 18, 22, 26, 28, 30], "cannot": [5, 10, 29, 30], "reassign": [5, 25, 29, 30], "onc": 5, "assign": [5, 15, 24, 25], "onli": [5, 7, 8, 9, 10, 18, 19, 20, 22, 24, 25, 28, 31], "ha": [5, 14, 15, 18], "one": [5, 9, 10, 13, 19, 20, 22, 25, 28, 30, 31], "traceback": [5, 11], "most": [5, 10, 11], "recent": [5, 11], "call": [5, 10, 11, 25], "last": [5, 11, 25], "util": [5, 11, 12, 13, 25], "treeerror": 5, "It": [5, 10, 12, 20, 22, 26], "go": 5, "sep": [6, 7, 8, 9, 10, 25], "basenod": [6, 9, 11, 12, 13, 20, 22, 23, 25, 29, 30], "separ": [6, 7, 8, 9, 10, 11, 28, 30], "path_nam": [6, 7, 8, 11, 20, 25], "print": [6, 8, 14, 15, 19, 21, 22, 25], "consol": [6, 8, 14, 15, 20, 21, 22, 25, 26], "hshow": [6, 20, 25], "horizont": [6, 8, 20, 22, 25], "orient": [6, 8, 20, 22, 25], "hprint_tre": [6, 8, 20, 25, 32], "To": [7, 10, 20, 22, 25, 26, 27, 28, 30, 34], "decid": 7, "which": [7, 8, 21, 25, 26], "consid": [7, 25], "your": [7, 26], "full": [7, 9, 10, 11, 20, 22, 25], "notat": [7, 8, 22, 25], "str_to_tre": [7, 20, 25, 32], "newick_to_tre": [7, 20, 25, 32], "list_to_tre": [7, 9, 10, 12, 13, 20, 25, 27, 30, 32], "list_to_tree_by_rel": [7, 20, 25, 32], "dict_to_tre": [7, 20, 32], "nested_dict_to_tre": [7, 20, 25, 32], "dataframe_to_tre": [7, 20, 25, 32], "dataframe_to_tree_by_rel": [7, 20, 25, 32], "add_path_to_tre": [7, 25, 32], "add_dict_to_tree_by_path": [7, 32], "add_dict_to_tree_by_nam": [7, 25, 32], "add_dataframe_to_tree_by_path": [7, 32], "add_dataframe_to_tree_by_nam": [7, 32], "previous": [7, 25], "did": 7, "join_typ": 7, "new": [7, 8, 9, 10, 15, 25, 26], "taken": 7, "ignor": 7, "share": 7, "name_data": 7, "path_col": [7, 8, 20], "join": [7, 8], "inner": 7, "drop": 7, "duplicate_name_allow": 7, "place": [7, 10, 13, 20], "should": [7, 8, 9, 13, 25, 30, 31], "For": [7, 8, 9, 10, 22, 25, 26, 29, 30], "exampl": [7, 9, 25, 26, 28, 29, 30], "refer": [7, 8, 9, 13, 25, 26], "differ": [7, 9, 10, 12, 22, 25], "path_data": [7, 19], "35": [7, 8, 20], "38": 7, "duplic": [7, 25, 29, 30], "name_attr": [7, 25], "name_dict": 7, "path_attr": [7, 25], "path_dict": [7, 20], "allow_dupl": 7, "sinc": [7, 18, 30, 31], "mai": 7, "repeat": 7, "error": [7, 10, 25], "thrown": [7, 10], "intermedi": [7, 8, 10, 25], "confus": [7, 25], "thi": [7, 8, 13, 20, 25, 26, 28, 30], "tag": [7, 9, 19, 20, 25], "path_list": [7, 12, 13, 27, 30], "name_kei": [7, 8, 20], "child_kei": [7, 8, 25], "recurs": [7, 8, 12, 22, 25, 27, 30], "tree_str": [7, 20], "length_attr": [7, 8], "attr_prefix": [7, 8], "nhx": [7, 8], "newick": [7, 8, 22, 25], "hampshir": [7, 8], "repres": [7, 8], "round": [7, 8, 20, 29, 30], "bracket": [7, 8, 25], "child1": [7, 8, 20], "child2": [7, 8, 20], "child3": [7, 8], "grandchild1": [7, 8], "grandchild2": [7, 8], "grandchild3": [7, 8], "besid": [7, 8, 25], "human": [7, 8], "variat": 7, "support": [7, 8, 11, 20, 22, 25], "special": [7, 25], "charact": [7, 8, 25], "enclos": 7, "singl": [7, 11, 20, 22, 25], "quot": 7, "auto": 7, "noden": 7, "speci": [7, 8], "befor": [7, 8, 12, 25, 26], "within": [7, 8, 10, 25], "detect": 7, "tree_prefix_list": 7, "mark": 7, "branch": [7, 8, 25, 26], "stem": [7, 8], "infer": 7, "unicod": [7, 25], "whitespac": 7, "command": [8, 22], "line": [8, 13, 22, 26], "yield_tre": [8, 25, 32], "tree_to_newick": [8, 20, 25, 32], "tree_to_dict": [8, 20, 32], "tree_to_nested_dict": [8, 20, 32], "tree_to_datafram": [8, 20, 32], "pillow": [8, 22, 25], "jpg": [8, 9, 10, 20, 22, 28, 30], "tree_to_pillow": [8, 20, 25, 32], "mermaid": [8, 22, 25], "markdown": [8, 25], "md": [8, 22, 26], "tree_to_mermaid": [8, 20, 25, 32], "while": [8, 10], "determin": 8, "what": 8, "skip": [8, 10], "subtre": [8, 9, 12, 13, 22, 25], "skip_depth": 8, "leaf_onli": 8, "similar": [8, 11, 18, 28, 30], "font": [8, 25], "famili": 8, "size": [8, 25], "arrow": [8, 25], "node_name_or_path": [8, 9, 20, 25], "intermediate_node_nam": 8, "const": [8, 20, 25], "custom_styl": [8, 20, 25], "select": 8, "result": [8, 10, 11, 14, 25], "choos": [8, 10], "ansi": [8, 20], "ascii": [8, 20], "const_bold": [8, 20], "doubl": [8, 20], "user": [8, 20, 22, 25], "icon": 8, "sub": 8, "becom": 8, "when": [8, 25, 26], "hyield_tre": [8, 25, 32], "attr_omit_nul": 8, "attr_bracket": [8, 20], "attr_name_filt": 8, "omit": [8, 25], "null": [8, 25], "open": [8, 26], "close": [8, 25], "shown": [8, 12], "final": 8, "symbol": [8, 10, 11], "person": [8, 20], "subset": 8, "callabl": [8, 11, 12, 25], "na0": 8, "nb0": 8, "b0": 8, "nd0": 8, "d0": 8, "ne0": 8, "e0": 8, "nc0": 8, "c0": 8, "defin": [8, 9, 13, 20, 22, 25, 30, 31], "customnod": 8, "def": [8, 29, 30, 31], "__init__": [8, 29, 30, 31], "edge_label": 8, "super": [8, 29, 30, 31], "export_tree_dot": 8, "altern": [8, 20, 22], "wai": [8, 10, 13, 19, 20, 22, 25], "get_node_attribut": 8, "export_tree_dot_cal": 8, "undirect": 8, "top": 8, "bottom": 8, "itself": 8, "stirng": 8, "titl": 8, "line_shap": 8, "basi": [8, 20], "node_border_colour": 8, "node_border_width": 8, "rounded_edg": 8, "node_shape_attr": 8, "edge_arrow": 8, "normal": [8, 25], "edge_arrow_attr": 8, "text": [8, 25], "accept": [8, 25], "addit": [8, 18, 22, 25], "appli": [8, 10], "entir": 8, "flowchart": [8, 22, 25], "curvatur": 8, "border": 8, "width": [8, 20, 30, 31], "stroke": [8, 20], "bumpx": 8, "bumpi": 8, "cardin": 8, "catmullrom": 8, "linear": 8, "monotonex": 8, "monotonei": 8, "natur": 8, "stepaft": 8, "stepbefor": 8, "rectangular": 8, "stadium": 8, "subroutin": 8, "cylindr": 8, "databas": 8, "circular": 8, "asymmetr": 8, "rhombu": 8, "decis": 8, "hexagon": 8, "parallelogram": 8, "parallelogram_alt": 8, "invert": 8, "trapezoid": 8, "trapezoid_alt": 8, "double_circl": 8, "shade": 8, "arrowhead": 8, "bold_open": 8, "dotted_open": 8, "invis": 8, "cross": 8, "double_norm": 8, "bidirect": 8, "double_cross": 8, "document": [8, 10, 20, 24, 25, 28, 30], "more": [8, 11, 20, 25], "past": 8, "output": [8, 25], "render": 8, "view": [8, 20, 27, 30], "visit": [8, 12], "playground": 8, "here": [8, 20], "advanc": 8, "subgraph": 8, "interact": 8, "script": 8, "click": 8, "node_styl": 8, "yellow": 8, "init": [8, 20, 25], "curv": [8, 20], "classdef": [8, 20], "class0": 8, "hexcod": 8, "everi": [8, 13], "length_sep": 8, "newickcharact": 8, "attr_sep": 8, "phylogenet": 8, "chang": [8, 9, 20, 24], "between": [8, 10, 13, 22, 25], "non": [8, 10], "empti": [8, 9, 10, 25], "height": 8, "start_po": 8, "font_famili": 8, "font_siz": 8, "12": 8, "font_colour": 8, "white": 8, "pillow_imag": [8, 20], "tree_pillow": 8, "calcul": 8, "automat": [8, 25], "posit": [8, 13], "x": [8, 12, 13, 22, 25], "offset": [8, 13], "y": [8, 13, 14, 21, 22, 25], "ttf": 8, "dejavusan": 8, "rgb": 8, "pil": 8, "gener": [8, 11, 12, 13, 15, 21, 22, 26, 30, 31], "come": 9, "handi": 9, "clone_tre": [9, 20, 25, 32], "basenodet": [9, 12], "need": [9, 22], "simpli": [9, 30, 31], "inherit": [9, 19, 20, 22], "get_subtre": [9, 20, 25, 32], "nodet": [9, 11], "root_subtre": [9, 20], "get_tree_diff": [9, 20, 25, 32], "other_tre": 9, "only_diff": [9, 20], "rel": [9, 11, 20, 22, 25], "compar": [9, 18, 19, 25], "also": [9, 10, 20, 22, 26], "origin": [9, 10, 25, 26], "download": [9, 10, 20, 28, 30], "pictur": [9, 10, 20, 28, 30], "photo1": [9, 10, 20, 28, 30], "file1": [9, 10, 20, 28, 30], "doc": [9, 10, 20, 26, 28, 30, 31], "photo2": [9, 10, 20, 28, 30], "root_oth": [9, 10, 20], "tree_diff": [9, 20], "The": [9, 22, 25], "picture_fold": [9, 10, 20], "edit": [9, 26], "against": 9, "check": [9, 11, 19, 20, 24, 25, 26], "prune_tre": [9, 20, 32], "binarynodet": [9, 12], "prune_path": [9, 25], "exact": [9, 20, 25], "prune": [9, 22, 25], "along": [9, 13], "remov": [9, 10, 14, 15, 21, 25], "partial": [9, 10, 11, 20, 22], "trail": [9, 10, 11, 25], "part": [9, 10, 11], "beyond": 9, "keep": [9, 25], "root_prun": [9, 20], "exactli": [9, 20], "retain": [9, 10, 28, 30], "There": [10, 20, 21, 22], "two": [10, 12, 22, 25, 28, 30], "replac": [10, 20, 22, 25], "scenario": 10, "from_path": [10, 20, 25, 28, 30], "to_path": [10, 20, 25, 28, 30], "sever": 10, "descript": [10, 12, 15, 19, 20, 21, 25], "to_tre": [10, 20, 28, 30], "skippabl": 10, "found": [10, 11, 25], "merge_children": [10, 25, 28, 30], "merg": [10, 24, 25], "merge_leav": [10, 25], "delete_children": 10, "its": [10, 11, 12, 13], "togeth": [10, 25], "noth": 10, "simultan": 10, "alwai": 10, "you": [10, 22, 26], "mix": 10, "match": [10, 11], "know": 10, "feel": 10, "free": 10, "copy_or_shift_log": 10, "replace_log": [10, 25], "customiz": 10, "destin": [10, 22], "shift_nod": [10, 20], "copy_nod": [10, 20], "copy_nodes_from_tree_to_tre": [10, 20, 28, 30], "shift_and_replace_nod": [10, 20, 25], "copy_and_replace_nodes_from_tree_to_tre": [10, 20, 25], "present": [10, 15, 25], "behav": 10, "like": [10, 25], "remain": 10, "from_tre": [10, 20, 28, 30], "with_full_path": [10, 25], "lead": [10, 11], "misc_fold": 10, "misc": [10, 25], "dummy_fold": 10, "dummi": 10, "pictures2": 10, "misc2": 10, "case": [10, 25], "accompani": 10, "faster": [10, 11, 20, 25], "search": [10, 12, 14, 18, 22, 25, 32], "overridden": [10, 25], "picture_folder2": 10, "instead": [10, 25, 28, 30], "alreadi": [10, 20], "application_fold": 10, "applic": [10, 18], "chrome": 10, "ex": 10, "file_fold": 10, "clash": 10, "photo3": 10, "happen": 10, "One": [11, 20], "find": [11, 14, 19, 20, 21, 22, 25, 32], "find_child": [11, 20, 25, 32], "findal": [11, 20, 32], "find_children": [11, 20, 25, 32], "find_nam": [11, 20, 32], "find_child_by_nam": [11, 20, 25, 32], "find_path": [11, 20, 32], "find_full_path": [11, 20, 32], "find_relative_path": [11, 20, 25, 32], "find_attr": [11, 20, 32], "condit": [11, 12, 20, 22, 25], "searcherror": 11, "expect": [11, 25], "less": 11, "than": 11, "element": 11, "evalu": [11, 12, 20], "attr_valu": 11, "custom": [11, 20, 25], "dagnodet": [11, 12], "62": 11, "min_count": 11, "max_count": 11, "30": 11, "minimum": [11, 13], "occurr": 11, "rais": [11, 25, 29, 30], "meet": 11, "work": [11, 25, 26], "unix": 11, "folder": [11, 25, 26], "express": 11, "wildcard": 11, "algorithm": [12, 13, 22, 25], "travers": [12, 22, 25], "lnr": 12, "pre": [12, 22, 24, 25, 26], "nlr": 12, "post": [12, 22, 24, 25], "lrn": 12, "level": [12, 13, 14, 15, 22, 25], "breadth": 12, "group": [12, 22, 25], "zigzag": [12, 22], "through": 12, "least": 12, "inorder_it": [12, 18, 33], "filter_condit": 12, "num_list": 12, "levelorder_it": [12, 18, 20, 33], "stop_condit": 12, "stop": 12, "levelordergroup_it": [12, 18, 20, 33], "postorder_it": [12, 18, 20, 33], "preorder_it": [12, 18, 20, 33], "topolog": 12, "becaus": 12, "process": 12, "zigzag_it": [12, 18, 20, 25, 33], "manner": 12, "across": 12, "zigzaggroup_it": [12, 18, 20, 25, 33], "reingold_tilford": [13, 33], "tree_nod": 13, "sibling_separ": 13, "subtree_separ": 13, "level_separ": 13, "x_offset": 13, "y_offset": 13, "draw": 13, "coordin": [13, 22, 25], "modifi": [13, 22, 25, 26, 28, 30, 32], "improv": 13, "over": 13, "reingold": [13, 22, 25], "tilford": [13, 22, 25], "accord": 13, "paper": 13, "diagram": [13, 25, 30, 31], "satisfi": 13, "aesthet": 13, "rule": [13, 22], "lie": 13, "straight": 13, "parallel": 13, "A": [13, 29, 30], "center": 13, "mirror": 13, "produc": 13, "reflect": [13, 25], "drawn": 13, "regardless": 13, "where": [13, 20, 25], "occur": 13, "25": 13, "walker": 13, "j": [13, 20], "1991": 13, "http": 13, "www": 13, "drdobb": 13, "com": [13, 26], "184402320": 13, "pgno": 13, "1981": 13, "tidier": 13, "ieee": 13, "transact": 13, "softwar": 13, "engin": 13, "co": 13, "pdf": 13, "comput": 13, "distanc": 13, "adjac": 13, "fix": 13, "workflow": [14, 15, 22, 25], "app_calendar": 14, "big": [14, 15], "four": 14, "year": 14, "month": 14, "dai": 14, "event": [14, 21], "my": [14, 21], "add_ev": [14, 21], "gym": [14, 21], "2023": [14, 21], "01": [14, 21], "18": [14, 21], "00": [14, 21], "dinner": [14, 21], "date_format": [14, 21], "m": [14, 20, 21, 26], "budget": [14, 21], "20": [14, 21], "02": [14, 21], "find_ev": [14, 21], "datetim": [14, 21], "dt": [14, 21], "delete_ev": [14, 21], "date": [14, 21, 25], "export": [14, 15, 17, 18, 21, 22, 25, 32], "to_datafram": [14, 21, 25], "time": [14, 21, 26], "nan": [14, 21], "event_nam": 14, "event_datetim": 14, "event_d": 14, "delet": [14, 25], "app_todo": 15, "apptodo": [15, 21, 34], "app_nam": 15, "three": 15, "item": [15, 21, 25], "given": 15, "add_item": [15, 21], "item_nam": [15, 21], "homework": [15, 21], "list_nam": [15, 21], "school": [15, 21], "milk": [15, 21], "bread": [15, 21], "groceri": [15, 21], "urgent": [15, 21], "cook": [15, 21], "reorder": [15, 21], "prioritize_list": 15, "prioritize_item": 15, "remove_item": 15, "json": [15, 21], "app2": [15, 21], "load": [15, 21], "add_list": 15, "els": 15, "static": 15, "json_path": 15, "priorit": [15, 21, 25], "shift": [15, 20, 22, 25], "well": 18, "demo": [18, 19, 20], "usual": 18, "node_group": [18, 20], "superclass": [19, 20], "node_": [19, 20], "node_a": 19, "below": [19, 20], "tabl": [19, 20], "wrt": [19, 20], "code": [19, 20, 25, 26], "some": [20, 26], "we": [20, 27, 28, 30, 31], "pars": [20, 25], "newick_str": 20, "either": 20, "still": 20, "after": [20, 26], "vertic": [20, 22], "respect": 20, "gender": 20, "node_b": 20, "lazi": 20, "visual": [20, 30, 31], "k": 20, "l": 20, "file2": 20, "whole": 20, "mermaid_md": 20, "showcas": 21, "how": [21, 25], "them": [21, 25, 26], "extern": 21, "app": [21, 25, 34], "data_calendar": 21, "integr": [22, 25, 26], "make": [22, 25, 26], "easi": 22, "learn": 22, "mani": 22, "github": [22, 25, 26], "commun": 22, "issu": [22, 25, 26], "discuss": [22, 25, 26], "changelog": 22, "contribut": [22, 24, 25], "pypi": [22, 25], "articl": 22, "explain": 22, "walkthrough": 22, "want": [22, 30, 31], "segment": [22, 25], "consist": [22, 25], "main": [22, 25], "pair": 22, "locat": [22, 26], "helper": [22, 25, 32], "smaller": 22, "plot": [22, 25, 33], "enhanc": [22, 25], "sampl": [22, 26], "demonstr": [22, 25], "so": 22, "flatten": 22, "forg": [22, 25], "run": [22, 26], "prompt": 22, "brew": 22, "gprof2dot": 22, "maco": 22, "graphviz": 22, "window": [22, 25], "tip": [24, 25], "trick": [24, 25], "directori": [24, 25, 26], "popul": 24, "read": 24, "weight": [24, 25], "up": [24, 25], "develop": 24, "test": [24, 25], "standard": [24, 25], "consequ": 24, "notabl": 25, "project": [25, 26], "adher": 25, "semant": 25, "version": 25, "sphinx": 25, "section": 25, "emoji": 25, "updat": [25, 26], "seo": 25, "web": 25, "mobil": 25, "upgrad": 25, "packag": [25, 26, 27, 30], "commit": [25, 26], "hook": 25, "compat": 25, "via": 25, "accessor": 25, "__getitem__": 25, "__delitem__": 25, "magic": 25, "__contains__": 25, "__iter__": 25, "hint": 25, "neater": 25, "handl": 25, "split": 25, "readm": [25, 26], "theme": 25, "better": 25, "introduc": 25, "hide": 25, "invalid": 25, "apostroph": 25, "wrap": 25, "convert": 25, "autom": 25, "doctest": [25, 26], "setup": 25, "o": 25, "logic": 25, "organ": 25, "renam": 25, "py": [25, 27, 30], "coverag": [25, 26], "report": [25, 26], "backward": 25, "delimit": 25, "prevent": 25, "abstract": 25, "assert": 25, "constant": 25, "secur": 25, "highlight": 25, "block": 25, "clean": 25, "action": [25, 26], "publish": 25, "conda": [25, 26], "enabl": 25, "rtd": 25, "manual": 25, "latest": 25, "git": [25, 26], "build": 25, "permut": [25, 32], "relev": 25, "accordingli": [25, 26], "releas": 25, "content": 25, "comment": [25, 26], "pull": [25, 26], "request": [25, 26], "relax": 25, "typevar": 25, "v": 25, "variabl": 25, "groot": 25, "onlin": 25, "clearer": 25, "phrase": 25, "spell": 25, "messag": [25, 26], "succinct": 25, "neg": 25, "adjust": 25, "calendar": [25, 34], "throw": 25, "typeerror": 25, "71": 25, "dtype": 25, "everyth": 25, "pyproject": [25, 26], "shortcut": 25, "66": 25, "being": 25, "mutabl": 25, "67": 25, "reduc": 25, "easier": 25, "instruct": 25, "vulner": 25, "abil": 25, "enforc": 25, "meant": 25, "relianc": 25, "numpi": 25, "reject": 25, "clariti": 25, "instal": [25, 26], "refactor": 25, "log": [25, 26], "statement": 25, "mypi": [25, 26], "flake8": [25, 26], "ini": 25, "pytest": [25, 26, 29, 30], "toml": [25, 26], "correct": 25, "settingwithcopywarn": 25, "hasattr": 25, "modif": [25, 32], "provid": 25, "illustr": [25, 32], "bnode": 25, "list_to_btre": 25, "minor": 25, "rollback": 25, "state": [25, 29, 30], "failur": 25, "shorter": 25, "layer": 25, "btree": 25, "made": 25, "unabl": 25, "disjoint": 25, "bgcolor": 25, "list_to_tree_tupl": 25, "arrai": 25, "even": 25, "drop_dupl": 25, "isnul": 25, "criteria": 25, "thank": 26, "excel": 26, "opportun": 26, "dive": 26, "fork": 26, "repositori": 26, "usernam": 26, "next": 26, "virtual": 26, "environ": 26, "activ": 26, "bigtree_venv": 26, "pip": 26, "env": 26, "bin": 26, "local": 26, "mode": 26, "let": 26, "assum": 26, "re": 26, "checkout": 26, "chore": 26, "push": 26, "pleas": 26, "sure": 26, "unit": 26, "100": [26, 29, 30], "cov": 26, "term": 26, "miss": 26, "config": 26, "hatch": 26, "recommend": 26, "feat": 26, "write": 26, "dure": 26, "isort": 26, "embark": 26, "glob": [27, 30], "built": [27, 30], "modul": [28, 30], "both": [28, 30], "long": [28, 30], "desir": [28, 30], "downloads_fold": [28, 30], "pictures_fold": [28, 30], "documents_fold": [28, 30], "valid": [28, 30], "ensur": [29, 30], "populationnod": [29, 30], "_popul": [29, 30], "sum": [29, 30], "percentag": [29, 30], "world": [29, 30], "b1": [29, 30], "countri": [29, 30], "c1": [29, 30], "a1": [29, 30], "c2": [29, 30], "a2": [29, 30], "50": [29, 30], "b2": [29, 30], "200": [29, 30], "b3": [29, 30], "450": [29, 30], "150": [29, 30], "33": [29, 30], "22": [29, 30], "11": [29, 30], "44": [29, 30], "readonlynod": [29, 30], "arg": [29, 30], "__readonli": [29, 30], "_node__pre_assign_par": [29, 30], "new_par": [29, 30], "runtimeerror": [29, 30], "_node__pre_assign_children": [29, 30], "new_children": [29, 30], "howev": [30, 31], "weightednod": [30, 31], "penwidth": [30, 31], "weighted_tre": [30, 31]}, "objects": {"bigtree.binarytree": [[0, 0, 0, "-", "construct"]], "bigtree.binarytree.construct": [[0, 1, 1, "", "list_to_binarytree"]], "bigtree.dag": [[1, 0, 0, "-", "construct"], [2, 0, 0, "-", "export"]], "bigtree.dag.construct": [[1, 1, 1, "", "dataframe_to_dag"], [1, 1, 1, "", "dict_to_dag"], [1, 1, 1, "", "list_to_dag"]], "bigtree.dag.export": [[2, 1, 1, "", "dag_to_dataframe"], [2, 1, 1, "", "dag_to_dict"], [2, 1, 1, "", "dag_to_dot"], [2, 1, 1, "", "dag_to_list"]], "bigtree.node": [[3, 0, 0, "-", "basenode"], [4, 0, 0, "-", "binarynode"], [5, 0, 0, "-", "dagnode"], [6, 0, 0, "-", "node"]], "bigtree.node.basenode": [[3, 2, 1, "", "BaseNode"]], "bigtree.node.basenode.BaseNode": [[3, 3, 1, "", "ancestors"], [3, 4, 1, "", "append"], [3, 3, 1, "", "children"], [3, 4, 1, "", "copy"], [3, 3, 1, "", "depth"], [3, 3, 1, "", "descendants"], [3, 4, 1, "", "describe"], [3, 4, 1, "", "extend"], [3, 4, 1, "", "from_dict"], [3, 4, 1, "", "get_attr"], [3, 4, 1, "", "go_to"], [3, 3, 1, "", "is_leaf"], [3, 3, 1, "", "is_root"], [3, 3, 1, "", "leaves"], [3, 3, 1, "", "left_sibling"], [3, 3, 1, "", "max_depth"], [3, 3, 1, "", "node_path"], [3, 3, 1, "", "parent"], [3, 3, 1, "", "parents"], [3, 3, 1, "", "right_sibling"], [3, 3, 1, "", "root"], [3, 4, 1, "", "set_attrs"], [3, 3, 1, "", "siblings"], [3, 4, 1, "", "sort"]], "bigtree.node.binarynode": [[4, 2, 1, "", "BinaryNode"]], "bigtree.node.binarynode.BinaryNode": [[4, 3, 1, "", "children"], [4, 3, 1, "", "is_leaf"], [4, 3, 1, "", "left"], [4, 3, 1, "", "parent"], [4, 3, 1, "", "right"], [4, 4, 1, "", "sort"]], "bigtree.node.dagnode": [[5, 2, 1, "", "DAGNode"]], "bigtree.node.dagnode.DAGNode": [[5, 3, 1, "", "ancestors"], [5, 3, 1, "", "children"], [5, 4, 1, "", "copy"], [5, 3, 1, "", "descendants"], [5, 4, 1, "", "describe"], [5, 4, 1, "", "from_dict"], [5, 4, 1, "", "get_attr"], [5, 4, 1, "", "go_to"], [5, 3, 1, "", "is_leaf"], [5, 3, 1, "", "is_root"], [5, 3, 1, "", "node_name"], [5, 3, 1, "", "parent"], [5, 3, 1, "", "parents"], [5, 4, 1, "", "set_attrs"], [5, 3, 1, "", "siblings"]], "bigtree.node.node": [[6, 2, 1, "", "Node"]], "bigtree.node.node.Node": [[6, 4, 1, "", "hshow"], [6, 3, 1, "", "node_name"], [6, 3, 1, "", "path_name"], [6, 3, 1, "", "sep"], [6, 4, 1, "", "show"]], "bigtree.tree": [[7, 0, 0, "-", "construct"], [8, 0, 0, "-", "export"], [9, 0, 0, "-", "helper"], [10, 0, 0, "-", "modify"], [11, 0, 0, "-", "search"]], "bigtree.tree.construct": [[7, 1, 1, "", "add_dataframe_to_tree_by_name"], [7, 1, 1, "", "add_dataframe_to_tree_by_path"], [7, 1, 1, "", "add_dict_to_tree_by_name"], [7, 1, 1, "", "add_dict_to_tree_by_path"], [7, 1, 1, "", "add_path_to_tree"], [7, 1, 1, "", "dataframe_to_tree"], [7, 1, 1, "", "dataframe_to_tree_by_relation"], [7, 1, 1, "", "dict_to_tree"], [7, 1, 1, "", "list_to_tree"], [7, 1, 1, "", "list_to_tree_by_relation"], [7, 1, 1, "", "nested_dict_to_tree"], [7, 1, 1, "", "newick_to_tree"], [7, 1, 1, "", "str_to_tree"]], "bigtree.tree.export": [[8, 1, 1, "", "hprint_tree"], [8, 1, 1, "", "hyield_tree"], [8, 1, 1, "", "print_tree"], [8, 1, 1, "", "tree_to_dataframe"], [8, 1, 1, "", "tree_to_dict"], [8, 1, 1, "", "tree_to_dot"], [8, 1, 1, "", "tree_to_mermaid"], [8, 1, 1, "", "tree_to_nested_dict"], [8, 1, 1, "", "tree_to_newick"], [8, 1, 1, "", "tree_to_pillow"], [8, 1, 1, "", "yield_tree"]], "bigtree.tree.helper": [[9, 1, 1, "", "clone_tree"], [9, 1, 1, "", "get_subtree"], [9, 1, 1, "", "get_tree_diff"], [9, 1, 1, "", "prune_tree"]], "bigtree.tree.modify": [[10, 1, 1, "", "copy_and_replace_nodes_from_tree_to_tree"], [10, 1, 1, "", "copy_nodes"], [10, 1, 1, "", "copy_nodes_from_tree_to_tree"], [10, 1, 1, "", "copy_or_shift_logic"], [10, 1, 1, "", "replace_logic"], [10, 1, 1, "", "shift_and_replace_nodes"], [10, 1, 1, "", "shift_nodes"]], "bigtree.tree.search": [[11, 1, 1, "", "find"], [11, 1, 1, "", "find_attr"], [11, 1, 1, "", "find_attrs"], [11, 1, 1, "", "find_child"], [11, 1, 1, "", "find_child_by_name"], [11, 1, 1, "", "find_children"], [11, 1, 1, "", "find_full_path"], [11, 1, 1, "", "find_name"], [11, 1, 1, "", "find_names"], [11, 1, 1, "", "find_path"], [11, 1, 1, "", "find_paths"], [11, 1, 1, "", "find_relative_path"], [11, 1, 1, "", "findall"]], "bigtree.utils": [[12, 0, 0, "-", "iterators"], [13, 0, 0, "-", "plot"]], "bigtree.utils.iterators": [[12, 1, 1, "", "dag_iterator"], [12, 1, 1, "", "inorder_iter"], [12, 1, 1, "", "levelorder_iter"], [12, 1, 1, "", "levelordergroup_iter"], [12, 1, 1, "", "postorder_iter"], [12, 1, 1, "", "preorder_iter"], [12, 1, 1, "", "zigzag_iter"], [12, 1, 1, "", "zigzaggroup_iter"]], "bigtree.utils.plot": [[13, 1, 1, "", "reingold_tilford"]], "bigtree.workflows": [[14, 0, 0, "-", "app_calendar"], [15, 0, 0, "-", "app_todo"]], "bigtree.workflows.app_calendar": [[14, 2, 1, "", "Calendar"]], "bigtree.workflows.app_calendar.Calendar": [[14, 4, 1, "", "add_event"], [14, 4, 1, "", "delete_event"], [14, 4, 1, "", "find_event"], [14, 4, 1, "", "show"], [14, 4, 1, "", "to_dataframe"]], "bigtree.workflows.app_todo": [[15, 2, 1, "", "AppToDo"]], "bigtree.workflows.app_todo.AppToDo": [[15, 4, 1, "", "add_item"], [15, 4, 1, "", "add_list"], [15, 4, 1, "", "load"], [15, 4, 1, "", "prioritize_item"], [15, 4, 1, "", "prioritize_list"], [15, 4, 1, "", "remove_item"], [15, 4, 1, "", "save"], [15, 4, 1, "", "show"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"]}, "titleterms": {"construct": [0, 1, 7, 18, 19, 20], "binari": [0, 16, 18], "tree": [0, 7, 8, 10, 11, 16, 18, 20, 22, 28, 30, 31, 32], "method": [0, 1, 2, 7, 8, 10, 11, 12, 29, 30], "dag": [1, 2, 17, 19], "export": [2, 8, 20], "basenod": 3, "binarynod": [4, 18], "dagnod": [5, 19], "node": [6, 20, 23, 29, 30], "add": [7, 29, 30], "attribut": [7, 19, 20], "custom": [8, 10], "helper": [9, 20], "modifi": [10, 20], "avail": 10, "configur": 10, "modif": 10, "permut": 10, "illustr": 10, "sampl": 10, "shift": 10, "copi": 10, "delet": 10, "advanc": 10, "search": [11, 20], "iter": 12, "plot": 13, "calendar": [14, 21], "app": [14, 15], "To": [15, 21], "do": [15, 21], "direct": 17, "acycl": 17, "graph": 17, "demonstr": [18, 19, 20, 21], "1": [18, 19, 20, 25], "from": [18, 19, 20], "2": [18, 19, 20, 25], "list": [18, 19, 20, 27, 30], "travers": [18, 20], "3": [19, 20, 25], "nest": [19, 20], "dictionari": [19, 20], "4": [19, 20, 25], "panda": [19, 20], "datafram": [19, 20], "oper": [19, 20], "str": 20, "5": [20, 25], "print": 20, "util": [20, 33], "clone": 20, "anoth": 20, "type": 20, "get": 20, "subtre": 20, "smaller": 20, "differ": 20, "root": 20, "prune": 20, "same": 20, "between": 20, "two": 20, "newick": 20, "string": 20, "notat": 20, "recurs": 20, "dot": 20, "png": 20, "6": [20, 25], "pillow": 20, "7": [20, 25], "mermaid": 20, "flowchart": 20, "md": 20, "workflow": [21, 34], "applic": 21, "document": [22, 26], "big": 22, "python": 22, "packag": 22, "compon": 22, "instal": 22, "pip": 22, "recommend": 22, "b": 22, "conda": 22, "other": 24, "changelog": 25, "unreleas": 25, "0": 25, "15": 25, "2023": 25, "01": 25, "26": 25, "ad": 25, "chang": [25, 26], "fix": 25, "20": 25, "17": 25, "2024": 25, "11": 25, "08": 25, "05": 25, "02": 25, "14": 25, "8": 25, "12": 25, "25": 25, "22": 25, "24": 25, "04": 25, "10": 25, "31": 25, "21": 25, "18": 25, "13": 25, "09": 25, "29": 25, "07": 25, "27": 25, "9": 25, "06": 25, "28": 25, "03": 25, "30": 25, "16": 25, "23": 25, "2022": 25, "contribut": 26, "set": 26, "up": 26, "develop": 26, "test": 26, "convent": 26, "standard": 26, "consequ": 26, "directori": [27, 30], "merg": [28, 30], "extend": [29, 30], "popul": [29, 30], "function": [29, 30], "properti": [29, 30], "read": [29, 30], "onli": [29, 30], "pre": [29, 30], "post": [29, 30], "assign": [29, 30], "check": [29, 30], "tip": 30, "trick": 30, "weight": [30, 31], "edg": [30, 31]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"\u2728 Construct": [[0, "sparkles-construct"], [1, "sparkles-construct"], [7, "sparkles-construct"]], "Binary Tree Construct Methods": [[0, "id1"]], "DAG Construct Methods": [[1, "id1"]], "\ud83d\udd28 Export": [[2, "hammer-export"], [8, "hammer-export"]], "DAG Export Methods": [[2, "id1"]], "\ud83c\udf31 BaseNode": [[3, "module-bigtree.node.basenode"]], "\ud83c\udf38 BinaryNode": [[4, "module-bigtree.node.binarynode"]], "\ud83c\udf3c DAGNode": [[5, "module-bigtree.node.dagnode"]], "\ud83c\udf3a Node": [[6, "module-bigtree.node.node"]], "Tree Construct Methods": [[7, "id1"]], "Tree Add Attributes Methods": [[7, "id2"]], "Tree Export Methods": [[8, "id1"]], "Tree Export Customizations": [[8, "id2"]], "\ud83d\udd27 Helper": [[9, "wrench-helper"]], "\ud83d\udcdd Modify": [[10, "memo-modify"]], "Available Configurations for Customization": [[10, "id1"]], "Tree Modification Permutations": [[10, "tree-modification-permutations"]], "Tree Modification Methods": [[10, "id2"]], "Tree Modification Illustration": [[10, "tree-modification-illustration"]], "Sample Tree Modification (Shift, Copy, Delete)": [[10, "id3"]], "Sample Tree Modification (Advanced)": [[10, "id4"]], "\ud83d\udd0d Search": [[11, "mag-search"]], "Tree Search Methods": [[11, "id1"]], "\u27b0 Iterators": [[12, "curly-loop-iterators"]], "Iterator Methods": [[12, "id1"]], "\ud83d\udcca Plot": [[13, "bar-chart-plot"]], "\ud83d\udcc6 Calendar App": [[14, "module-bigtree.workflows.app_calendar"]], "\u2714\ufe0f To Do App": [[15, "module-bigtree.workflows.app_todo"]], "\ud83c\udf35 Binary Tree": [[16, "cactus-binary-tree"]], "\ud83c\udf34 Directed Acyclic Graph (DAG)": [[17, "palm-tree-directed-acyclic-graph-dag"]], "\ud83d\udccb Binary Tree Demonstration": [[18, "binary-tree-demonstration"]], "Construct Binary Tree": [[18, "construct-binary-tree"]], "1. From BinaryNode": [[18, "from-binarynode"]], "2. From list": [[18, "from-list"], [19, "from-list"]], "Traverse Binary Tree": [[18, "traverse-binary-tree"]], "\ud83d\udccb DAG Demonstration": [[19, "dag-demonstration"]], "Construct DAG": [[19, "construct-dag"]], "1. From DAGNode": [[19, "from-dagnode"]], "3. From nested dictionary": [[19, "from-nested-dictionary"]], "4. From pandas DataFrame": [[19, "from-pandas-dataframe"]], "DAG Attributes and Operations": [[19, "dag-attributes-and-operations"]], "\ud83d\udccb Tree Demonstration": [[20, "tree-demonstration"]], "Construct Tree": [[20, "construct-tree"]], "1. From Node": [[20, "from-node"]], "2. From str": [[20, "from-str"]], "3. From list": [[20, "from-list"]], "4. From nested dictionary": [[20, "from-nested-dictionary"]], "5. From pandas DataFrame": [[20, "from-pandas-dataframe"]], "Print Tree": [[20, "print-tree"]], "Tree Attributes and Operations": [[20, "tree-attributes-and-operations"]], "Traverse Tree": [[20, "traverse-tree"]], "Modify Tree": [[20, "modify-tree"]], "Tree Search": [[20, "tree-search"]], "Helper Utility": [[20, "helper-utility"]], "1. Cloning tree to another Node type": [[20, "cloning-tree-to-another-node-type"]], "2. Getting subtree (smaller tree with different root)": [[20, "getting-subtree-smaller-tree-with-different-root"]], "3. Pruning tree (smaller tree with same root)": [[20, "pruning-tree-smaller-tree-with-same-root"]], "4. Getting difference between two trees": [[20, "getting-difference-between-two-trees"]], "Export Tree": [[20, "export-tree"]], "1. Export to Newick string notation": [[20, "export-to-newick-string-notation"]], "2. Export to nested dictionary": [[20, "export-to-nested-dictionary"]], "3. Export to nested recursive dictionary": [[20, "export-to-nested-recursive-dictionary"]], "4. Export to pandas DataFrame": [[20, "export-to-pandas-dataframe"]], "5. Export to dot (and png)": [[20, "export-to-dot-and-png"]], "6. Export to Pillow (and png)": [[20, "export-to-pillow-and-png"]], "7. Export to Mermaid Flowchart (and md)": [[20, "export-to-mermaid-flowchart-and-md"]], "\ud83d\udccb Workflow Demonstration": [[21, "workflow-demonstration"]], "To Do Application": [[21, "to-do-application"]], "Calendar Application": [[21, "calendar-application"]], "\ud83c\udf33 Documentation": [[22, "deciduous-tree-documentation"]], "Big Tree Python Package": [[22, "big-tree-python-package"]], "Components": [[22, "components"]], "Installation": [[22, "installation"]], "a) Installation with pip (recommended)": [[22, "a-installation-with-pip-recommended"]], "b) Installation with conda": [[22, "b-installation-with-conda"]], "\ud83c\udf3f Node": [[23, "herb-node"]], "\ud83c\udf10 Others": [[24, "globe-with-meridians-others"]], "\ud83c\udf42 Changelog": [[25, "fallen-leaf-changelog"]], "Changelog": [[25, "changelog"]], "Unreleased": [[25, "unreleased"]], "0.15.7 - 2023-01-26": [[25, "id1"]], "Added": [[25, "added"], [25, "id3"], [25, "id11"], [25, "id13"], [25, "id15"], [25, "id19"], [25, "id28"], [25, "id35"], [25, "id37"], [25, "id39"], [25, "id41"], [25, "id43"], [25, "id45"], [25, "id47"], [25, "id49"], [25, "id52"], [25, "id55"], [25, "id66"], [25, "id70"], [25, "id75"], [25, "id77"], [25, "id79"], [25, "id82"], [25, "id89"], [25, "id93"], [25, "id97"], [25, "id106"], [25, "id112"], [25, "id114"], [25, "id116"], [25, "id118"], [25, "id122"], [25, "id128"], [25, "id130"], [25, "id134"], [25, "id142"], [25, "id145"], [25, "id148"], [25, "id151"], [25, "id156"], [25, "id158"], [25, "id161"], [25, "id168"], [25, "id174"], [25, "id176"], [25, "id181"], [25, "id183"], [25, "id186"], [25, "id188"]], "Changed": [[25, "changed"], [25, "id4"], [25, "id6"], [25, "id8"], [25, "id16"], [25, "id20"], [25, "id22"], [25, "id25"], [25, "id29"], [25, "id31"], [25, "id33"], [25, "id50"], [25, "id57"], [25, "id59"], [25, "id63"], [25, "id67"], [25, "id71"], [25, "id83"], [25, "id86"], [25, "id91"], [25, "id94"], [25, "id98"], [25, "id100"], [25, "id102"], [25, "id107"], [25, "id126"], [25, "id135"], [25, "id138"], [25, "id140"], [25, "id159"], [25, "id162"], [25, "id164"], [25, "id177"], [25, "id184"]], "Fixed": [[25, "fixed"], [25, "id9"], [25, "id17"], [25, "id23"], [25, "id26"], [25, "id53"], [25, "id61"], [25, "id64"], [25, "id68"], [25, "id73"], [25, "id80"], [25, "id84"], [25, "id87"], [25, "id95"], [25, "id104"], [25, "id108"], [25, "id110"], [25, "id120"], [25, "id124"], [25, "id132"], [25, "id136"], [25, "id143"], [25, "id146"], [25, "id149"], [25, "id152"], [25, "id154"], [25, "id166"], [25, "id170"], [25, "id172"], [25, "id179"]], "0.15.6 - 2023-01-20": [[25, "id2"]], "0.15.5 - 2023-01-17": [[25, "id5"]], "0.15.4 - 2024-01-11": [[25, "id7"]], "0.15.3 - 2024-01-08": [[25, "id10"]], "0.15.2 - 2024-01-08": [[25, "id12"]], "0.15.1 - 2024-01-05": [[25, "id14"]], "0.15.0 - 2024-01-02": [[25, "id18"]], "0.14.8 - 2023-12-25": [[25, "id21"]], "0.14.7 - 2023-12-22": [[25, "id24"]], "0.14.6 - 2023-12-14": [[25, "id27"]], "0.14.5 - 2023-11-24": [[25, "id30"]], "0.14.4 - 2023-11-04": [[25, "id32"]], "0.14.3 - 2023-10-31": [[25, "id34"]], "0.14.2 - 2023-10-21": [[25, "id36"]], "0.14.1 - 2023-10-18": [[25, "id38"]], "0.14.0 - 2023-10-18": [[25, "id40"]], "0.13.3 - 2023-10-17": [[25, "id42"]], "0.13.2 - 2023-10-17": [[25, "id44"]], "0.13.1 - 2023-10-15": [[25, "id46"]], "0.13.0 - 2023-09-29": [[25, "id48"]], "0.12.5 - 2023-09-26": [[25, "id51"]], "0.12.4 - 2023-09-25": [[25, "id54"]], "0.12.3 - 2023-09-17": [[25, "id56"]], "0.12.2 - 2023-09-12": [[25, "id58"]], "0.12.1 - 2023-09-11": [[25, "id60"]], "0.12.0 - 2023-09-09": [[25, "id62"]], "0.11.0 - 2023-09-08": [[25, "id65"]], "0.10.3 - 2023-08-12": [[25, "id69"]], "0.10.2 - 2023-08-11": [[25, "id72"]], "0.10.1 - 2023-07-27": [[25, "id74"]], "0.10.0 - 2023-07-15": [[25, "id76"]], "0.9.5 - 2023-07-13": [[25, "id78"]], "0.9.4 - 2023-06-18": [[25, "id81"]], "0.9.3 - 2023-05-28": [[25, "id85"]], "0.9.2 - 2023-04-09": [[25, "id88"]], "0.9.1 - 2023-03-30": [[25, "id90"]], "0.9.0 - 2023-03-29": [[25, "id92"]], "0.8.4 - 2023-03-24": [[25, "id96"]], "0.8.3 - 2023-03-16": [[25, "id99"]], "0.8.2 - 2023-03-16": [[25, "id101"]], "0.8.1 - 2023-03-10": [[25, "id103"]], "0.8.0 - 2023-03-10": [[25, "id105"]], "0.7.4 - 2023-02-27": [[25, "id109"]], "0.7.3 - 2023-02-25": [[25, "id111"]], "0.7.2 - 2023-02-18": [[25, "id113"]], "0.7.1 - 2023-02-18": [[25, "id115"]], "0.7.0 - 2023-02-18": [[25, "id117"]], "0.6.10 - 2023-01-23": [[25, "id119"]], "0.6.9 - 2023-01-22": [[25, "id121"]], "0.6.8 - 2023-01-14": [[25, "id123"]], "0.6.7 - 2023-01-09": [[25, "id125"]], "0.6.6 - 2022-12-15": [[25, "id127"]], "0.6.5 - 2022-12-07": [[25, "id129"]], "0.6.4 - 2022-11-16": [[25, "id131"]], "0.6.3 - 2022-11-15": [[25, "id133"]], "0.6.2 - 2022-11-15": [[25, "id137"]], "0.6.1 - 2022-11-14": [[25, "id139"]], "0.6.0 - 2022-11-13": [[25, "id141"]], "0.5.5 - 2022-11-12": [[25, "id144"]], "0.5.4 - 2022-11-12": [[25, "id147"]], "0.5.3 - 2022-11-11": [[25, "id150"]], "0.5.2 - 2022-11-10": [[25, "id153"]], "0.5.1 - 2022-11-09": [[25, "id155"]], "0.5.0 - 2022-11-09": [[25, "id157"]], "0.4.6 - 2022-11-09": [[25, "id160"]], "0.4.5 - 2022-11-08": [[25, "id163"]], "0.4.4 - 2022-11-08": [[25, "id165"]], "0.4.3 - 2022-11-08": [[25, "id167"]], "0.4.2 - 2022-11-08": [[25, "id169"]], "0.4.1 - 2022-11-07": [[25, "id171"]], "0.4.0 - 2022-11-07": [[25, "id173"]], "0.3.3 - 2022-11-07": [[25, "id175"]], "0.3.2 - 2022-11-07": [[25, "id178"]], "0.3.1 - 2022-11-07": [[25, "id180"]], "0.3.0 - 2022-11-05": [[25, "id182"]], "0.2.0 - 2022-11-03": [[25, "id185"]], "0.1.0 - 2022-11-01": [[25, "id187"]], "\ud83c\udf6a Contributing": [[26, "cookie-contributing"]], "Set Up": [[26, "set-up"]], "Developing": [[26, "developing"]], "Testing and Documentation": [[26, "testing-and-documentation"]], "Convention and Standards": [[26, "convention-and-standards"]], "Consequent Changes": [[26, "consequent-changes"]], "List Directory": [[27, "list-directory"], [30, "list-directory"]], "Merging Trees": [[28, "merging-trees"], [30, "merging-trees"]], "Extending Nodes": [[29, "extending-nodes"], [30, "extending-nodes"]], "Population Node (add functionality/method/property)": [[29, "population-node-add-functionality-method-property"], [30, "population-node-add-functionality-method-property"]], "Read-Only Node (add pre-/post-assign checks)": [[29, "read-only-node-add-pre-post-assign-checks"], [30, "read-only-node-add-pre-post-assign-checks"]], "\ud83d\udca1 Tips and Tricks": [[30, "bulb-tips-and-tricks"]], "Trees with Weighted Edges": [[30, "trees-with-weighted-edges"], [31, "trees-with-weighted-edges"]], "\ud83c\udf32 Tree": [[32, "evergreen-tree-tree"]], "\ud83d\udd27 Utils": [[33, "wrench-utils"]], "\ud83d\udc77 Workflows": [[34, "construction-worker-workflows"]]}, "indexentries": {"bigtree.binarytree.construct": [[0, "module-bigtree.binarytree.construct"]], "list_to_binarytree() (in module bigtree.binarytree.construct)": [[0, "bigtree.binarytree.construct.list_to_binarytree"]], "module": [[0, "module-bigtree.binarytree.construct"], [1, "module-bigtree.dag.construct"], [2, "module-bigtree.dag.export"], [3, "module-bigtree.node.basenode"], [4, "module-bigtree.node.binarynode"], [5, "module-bigtree.node.dagnode"], [6, "module-bigtree.node.node"], [7, "module-bigtree.tree.construct"], [8, "module-bigtree.tree.export"], [9, "module-bigtree.tree.helper"], [10, "module-bigtree.tree.modify"], [11, "module-bigtree.tree.search"], [12, "module-bigtree.utils.iterators"], [13, "module-bigtree.utils.plot"], [14, "module-bigtree.workflows.app_calendar"], [15, "module-bigtree.workflows.app_todo"]], "bigtree.dag.construct": [[1, "module-bigtree.dag.construct"]], "dataframe_to_dag() (in module bigtree.dag.construct)": [[1, "bigtree.dag.construct.dataframe_to_dag"]], "dict_to_dag() (in module bigtree.dag.construct)": [[1, "bigtree.dag.construct.dict_to_dag"]], "list_to_dag() (in module bigtree.dag.construct)": [[1, "bigtree.dag.construct.list_to_dag"]], "bigtree.dag.export": [[2, "module-bigtree.dag.export"]], "dag_to_dataframe() (in module bigtree.dag.export)": [[2, "bigtree.dag.export.dag_to_dataframe"]], "dag_to_dict() (in module bigtree.dag.export)": [[2, "bigtree.dag.export.dag_to_dict"]], "dag_to_dot() (in module bigtree.dag.export)": [[2, "bigtree.dag.export.dag_to_dot"]], "dag_to_list() (in module bigtree.dag.export)": [[2, "bigtree.dag.export.dag_to_list"]], "basenode (class in bigtree.node.basenode)": [[3, "bigtree.node.basenode.BaseNode"]], "ancestors (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.ancestors"]], "append() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.append"]], "bigtree.node.basenode": [[3, "module-bigtree.node.basenode"]], "children (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.children"]], "copy() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.copy"]], "depth (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.depth"]], "descendants (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.descendants"]], "describe() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.describe"]], "extend() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.extend"]], "from_dict() (bigtree.node.basenode.basenode class method)": [[3, "bigtree.node.basenode.BaseNode.from_dict"]], "get_attr() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.get_attr"]], "go_to() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.go_to"]], "is_leaf (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.is_leaf"]], "is_root (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.is_root"]], "leaves (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.leaves"]], "left_sibling (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.left_sibling"]], "max_depth (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.max_depth"]], "node_path (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.node_path"]], "parent (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.parent"]], "parents (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.parents"]], "right_sibling (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.right_sibling"]], "root (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.root"]], "set_attrs() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.set_attrs"]], "siblings (bigtree.node.basenode.basenode property)": [[3, "bigtree.node.basenode.BaseNode.siblings"]], "sort() (bigtree.node.basenode.basenode method)": [[3, "bigtree.node.basenode.BaseNode.sort"]], "binarynode (class in bigtree.node.binarynode)": [[4, "bigtree.node.binarynode.BinaryNode"]], "bigtree.node.binarynode": [[4, "module-bigtree.node.binarynode"]], "children (bigtree.node.binarynode.binarynode property)": [[4, "bigtree.node.binarynode.BinaryNode.children"]], "is_leaf (bigtree.node.binarynode.binarynode property)": [[4, "bigtree.node.binarynode.BinaryNode.is_leaf"]], "left (bigtree.node.binarynode.binarynode property)": [[4, "bigtree.node.binarynode.BinaryNode.left"]], "parent (bigtree.node.binarynode.binarynode property)": [[4, "bigtree.node.binarynode.BinaryNode.parent"]], "right (bigtree.node.binarynode.binarynode property)": [[4, "bigtree.node.binarynode.BinaryNode.right"]], "sort() (bigtree.node.binarynode.binarynode method)": [[4, "bigtree.node.binarynode.BinaryNode.sort"]], "dagnode (class in bigtree.node.dagnode)": [[5, "bigtree.node.dagnode.DAGNode"]], "ancestors (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.ancestors"]], "bigtree.node.dagnode": [[5, "module-bigtree.node.dagnode"]], "children (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.children"]], "copy() (bigtree.node.dagnode.dagnode method)": [[5, "bigtree.node.dagnode.DAGNode.copy"]], "descendants (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.descendants"]], "describe() (bigtree.node.dagnode.dagnode method)": [[5, "bigtree.node.dagnode.DAGNode.describe"]], "from_dict() (bigtree.node.dagnode.dagnode class method)": [[5, "bigtree.node.dagnode.DAGNode.from_dict"]], "get_attr() (bigtree.node.dagnode.dagnode method)": [[5, "bigtree.node.dagnode.DAGNode.get_attr"]], "go_to() (bigtree.node.dagnode.dagnode method)": [[5, "bigtree.node.dagnode.DAGNode.go_to"]], "is_leaf (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.is_leaf"]], "is_root (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.is_root"]], "node_name (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.node_name"]], "parent (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.parent"]], "parents (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.parents"]], "set_attrs() (bigtree.node.dagnode.dagnode method)": [[5, "bigtree.node.dagnode.DAGNode.set_attrs"]], "siblings (bigtree.node.dagnode.dagnode property)": [[5, "bigtree.node.dagnode.DAGNode.siblings"]], "node (class in bigtree.node.node)": [[6, "bigtree.node.node.Node"]], "bigtree.node.node": [[6, "module-bigtree.node.node"]], "hshow() (bigtree.node.node.node method)": [[6, "bigtree.node.node.Node.hshow"]], "node_name (bigtree.node.node.node property)": [[6, "bigtree.node.node.Node.node_name"]], "path_name (bigtree.node.node.node property)": [[6, "bigtree.node.node.Node.path_name"]], "sep (bigtree.node.node.node property)": [[6, "bigtree.node.node.Node.sep"]], "show() (bigtree.node.node.node method)": [[6, "bigtree.node.node.Node.show"]], "add_dataframe_to_tree_by_name() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.add_dataframe_to_tree_by_name"]], "add_dataframe_to_tree_by_path() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.add_dataframe_to_tree_by_path"]], "add_dict_to_tree_by_name() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.add_dict_to_tree_by_name"]], "add_dict_to_tree_by_path() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.add_dict_to_tree_by_path"]], "add_path_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.add_path_to_tree"]], "bigtree.tree.construct": [[7, "module-bigtree.tree.construct"]], "dataframe_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.dataframe_to_tree"]], "dataframe_to_tree_by_relation() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.dataframe_to_tree_by_relation"]], "dict_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.dict_to_tree"]], "list_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.list_to_tree"]], "list_to_tree_by_relation() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.list_to_tree_by_relation"]], "nested_dict_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.nested_dict_to_tree"]], "newick_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.newick_to_tree"]], "str_to_tree() (in module bigtree.tree.construct)": [[7, "bigtree.tree.construct.str_to_tree"]], "bigtree.tree.export": [[8, "module-bigtree.tree.export"]], "hprint_tree() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.hprint_tree"]], "hyield_tree() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.hyield_tree"]], "print_tree() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.print_tree"]], "tree_to_dataframe() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_dataframe"]], "tree_to_dict() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_dict"]], "tree_to_dot() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_dot"]], "tree_to_mermaid() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_mermaid"]], "tree_to_nested_dict() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_nested_dict"]], "tree_to_newick() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_newick"]], "tree_to_pillow() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.tree_to_pillow"]], "yield_tree() (in module bigtree.tree.export)": [[8, "bigtree.tree.export.yield_tree"]], "bigtree.tree.helper": [[9, "module-bigtree.tree.helper"]], "clone_tree() (in module bigtree.tree.helper)": [[9, "bigtree.tree.helper.clone_tree"]], "get_subtree() (in module bigtree.tree.helper)": [[9, "bigtree.tree.helper.get_subtree"]], "get_tree_diff() (in module bigtree.tree.helper)": [[9, "bigtree.tree.helper.get_tree_diff"]], "prune_tree() (in module bigtree.tree.helper)": [[9, "bigtree.tree.helper.prune_tree"]], "bigtree.tree.modify": [[10, "module-bigtree.tree.modify"]], "copy_and_replace_nodes_from_tree_to_tree() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.copy_and_replace_nodes_from_tree_to_tree"]], "copy_nodes() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.copy_nodes"]], "copy_nodes_from_tree_to_tree() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.copy_nodes_from_tree_to_tree"]], "copy_or_shift_logic() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.copy_or_shift_logic"]], "replace_logic() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.replace_logic"]], "shift_and_replace_nodes() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.shift_and_replace_nodes"]], "shift_nodes() (in module bigtree.tree.modify)": [[10, "bigtree.tree.modify.shift_nodes"]], "bigtree.tree.search": [[11, "module-bigtree.tree.search"]], "find() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find"]], "find_attr() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_attr"]], "find_attrs() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_attrs"]], "find_child() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_child"]], "find_child_by_name() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_child_by_name"]], "find_children() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_children"]], "find_full_path() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_full_path"]], "find_name() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_name"]], "find_names() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_names"]], "find_path() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_path"]], "find_paths() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_paths"]], "find_relative_path() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.find_relative_path"]], "findall() (in module bigtree.tree.search)": [[11, "bigtree.tree.search.findall"]], "bigtree.utils.iterators": [[12, "module-bigtree.utils.iterators"]], "dag_iterator() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.dag_iterator"]], "inorder_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.inorder_iter"]], "levelorder_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.levelorder_iter"]], "levelordergroup_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.levelordergroup_iter"]], "postorder_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.postorder_iter"]], "preorder_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.preorder_iter"]], "zigzag_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.zigzag_iter"]], "zigzaggroup_iter() (in module bigtree.utils.iterators)": [[12, "bigtree.utils.iterators.zigzaggroup_iter"]], "bigtree.utils.plot": [[13, "module-bigtree.utils.plot"]], "reingold_tilford() (in module bigtree.utils.plot)": [[13, "bigtree.utils.plot.reingold_tilford"]], "calendar (class in bigtree.workflows.app_calendar)": [[14, "bigtree.workflows.app_calendar.Calendar"]], "add_event() (bigtree.workflows.app_calendar.calendar method)": [[14, "bigtree.workflows.app_calendar.Calendar.add_event"]], "bigtree.workflows.app_calendar": [[14, "module-bigtree.workflows.app_calendar"]], "delete_event() (bigtree.workflows.app_calendar.calendar method)": [[14, "bigtree.workflows.app_calendar.Calendar.delete_event"]], "find_event() (bigtree.workflows.app_calendar.calendar method)": [[14, "bigtree.workflows.app_calendar.Calendar.find_event"]], "show() (bigtree.workflows.app_calendar.calendar method)": [[14, "bigtree.workflows.app_calendar.Calendar.show"]], "to_dataframe() (bigtree.workflows.app_calendar.calendar method)": [[14, "bigtree.workflows.app_calendar.Calendar.to_dataframe"]], "apptodo (class in bigtree.workflows.app_todo)": [[15, "bigtree.workflows.app_todo.AppToDo"]], "add_item() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.add_item"]], "add_list() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.add_list"]], "bigtree.workflows.app_todo": [[15, "module-bigtree.workflows.app_todo"]], "load() (bigtree.workflows.app_todo.apptodo static method)": [[15, "bigtree.workflows.app_todo.AppToDo.load"]], "prioritize_item() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.prioritize_item"]], "prioritize_list() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.prioritize_list"]], "remove_item() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.remove_item"]], "save() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.save"]], "show() (bigtree.workflows.app_todo.apptodo method)": [[15, "bigtree.workflows.app_todo.AppToDo.show"]]}})