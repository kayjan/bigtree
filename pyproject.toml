[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bigtree"
description = "Tree Implementation and Methods for Python, integrated with Python list, dictionary, and pandas DataFrame."
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
keywords = [
  "tree",
  "bigtree",
]
authors = [
  { name = "Kay Jan", email = "kayjanw@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Documentation = "https://bigtree.readthedocs.io"
Issues = "https://github.com/kayjan/bigtree/issues"
Discussions = "https://github.com/kayjan/bigtree/discussions"
Source = "https://github.com/kayjan/bigtree"

[project.optional-dependencies]
all = [
  "pandas",
  "pydot",
  "Pillow",
]
image = [
  "pydot",
  "Pillow",
]
pandas = ["pandas"]

[tool.hatch.version]
path = "bigtree/__init__.py"

[tool.hatch.envs.default]
dependencies = [
  "black",
  "coverage",
  "mypy",
  "pandas",
  "Pillow",
  "pydot",
  "pytest",
  "pytest-cov",
  "pytest-benchmark[histogram]",
]

[tool.hatch.envs.default.scripts]
cov = "no-cov && coverage report --show-missing --omit='*/workflows/*' {args} --benchmark-autosave --benchmark-histogram=.benchmarks/histogram --benchmark-json .benchmarks/output.json"
cov2 = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=bigtree {args} --benchmark-autosave --benchmark-histogram=.benchmarks/histogram --benchmark-json .benchmarks/output.json"
no-cov = "pytest . {args}"
lint = "black -l 88 ."
sort = "isort --profile black ."
mypy-type = "mypy bigtree"

[tool.hatch.envs.docs]
dependencies = [
  "autodocsumm==0.2.11",
  "IPython",
  "myst-parser~=1.0.0",
  "sphinxcontrib-mermaid==0.9.2",
  "sphinxemoji==0.2.0",
  "sphinx-material==0.0.36"
]

[tool.hatch.envs.docs.scripts]
html = "sphinx-build -M html docs_sphinx/source docs_sphinx/build"
coverage = "sphinx-build -v -b coverage docs_sphinx/source docs_sphinx/build/coverage"
doctest = "sphinx-build -v -b doctest docs_sphinx/source docs_sphinx/build/doctest"
clean = "sphinx-build -M clean docs_sphinx/source docs_sphinx/build"
clean-html = "sphinx-build -M html docs_sphinx/source docs_sphinx/build & sphinx-build -M clean docs_sphinx/source docs_sphinx/build"

[tool.hatch.envs.mkdocs]
dependencies = [
  "black",
  "docstr-coverage",
  "IPython",
  "mkdocs==1.5.3",
  "mkdocs-material[imaging]==9.5.5",
  "mdx_truly_sane_lists",
  "mkdocstrings[python]",
  "mkdocs-glightbox",
  "termynal",
]

[tool.hatch.envs.mkdocs.scripts]
add-cairo = "ln -s /opt/homebrew/lib/libcairo.2.dylib . "
coverage = "docstr-coverage bigtree --skip-file-doc --skip-init --exclude \"(.*/exceptions.py|.*/constants.py)\""
build = "mkdocs build"
serve = "mkdocs serve"
deploy = "mkdocs gh-deploy"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "*/tests/*",
  "*/workflows/*",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.flake8]
ignore = """E501, W503"""
per-file-ignores = """
  docs_sphinx/source/conf.py: E402
  bigtree/__init__.py: F401
"""

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
strict = true
strict_optional = false
warn_no_return = false
